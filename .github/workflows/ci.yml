name: Continuous Integration

on:
  push:
    branches: [main, testing-ci]
  pull_request:
    branches: [main, testing-ci]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
      fail-fast: false  # Continue testing other versions even if one fails
    continue-on-error: ${{ matrix.python-version == '3.12' }}  # Allow failure for 3.12

    steps:
    - uses: actions/checkout@v3

    - name: Set up Conda with Mamba
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: "${{ matrix.python-version }}"
        environment-file: environment.yml
        auto-activate-base: false
        use-mamba: true

    - name: Debug Environment File
      run: cat environment.yml

    - name: Create Conda Environment
      run: |
        source $(conda info --base)/etc/profile.d/conda.sh
        conda env create --file environment.yml --verbose

    - name: Install Pip Dependencies
      run: |
        source $(conda info --base)/etc/profile.d/conda.sh
        conda activate test
        pip install tox pytest

    - name: Install src package in editable mode
      run: |
        source $(conda info --base)/etc/profile.d/conda.sh
        conda activate test
        pip install -e .

    - name: Run Tests
      run: |
        source $(conda info --base)/etc/profile.d/conda.sh
        conda activate test
        pytest

    # Document results
    - name: Output Compatibility Result
      run: |
        if [ "${{ job.status }}" == "failure" ]; then
          echo "Python ${{ matrix.python-version }} encountered compatibility issues."
        else
          echo "Python ${{ matrix.python-version }} passed compatibility testing."
        fi
